import{_ as i,r as n,o as u,c as d,a as l,b as e,d as t,w as o,e as s}from"./app-n0xwCUxG.js";const h={},m=s('<h2 id="关于博客" tabindex="-1"><a class="header-anchor" href="#关于博客" aria-hidden="true">#</a> 关于博客</h2><p>这个博客主要用于记录博主的个人成长的所有文章，在记录自己学习和思考的同时，希望来访的同学也能从中有所收获。</p><p>博客取名为「代码天涯路」，意即IT一行学习路漫漫，有很长的学习路径要走，但每一步的努力都不会白费，以此自勉。</p><h2 id="关于博主" tabindex="-1"><a class="header-anchor" href="#关于博主" aria-hidden="true">#</a> 关于博主</h2><p>博主涉猎内容较广，对技术比较感兴趣，曾经工作过的内容有：在初创公司做存储相关工作、在AI+药物公司做算法工程、在某大厂做广告平台，博主自身希望能在技术这一行有更长远的发展，希望以此博客作为自己不断努力的见证。</p><h2 id="联系博主" tabindex="-1"><a class="header-anchor" href="#联系博主" aria-hidden="true">#</a> 联系博主</h2>',6),c={href:"https://github.com/shiqi-lu",target:"_blank",rel:"noopener noreferrer"},g=l("li",null,[l("p",null,"Email: traumlou [at] 163.com")],-1),_=l("h2",{id:"近期更新-计划",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#近期更新-计划","aria-hidden":"true"},"#"),e(" 近期更新+计划")],-1),f=l("p",null,"此处用于记录博主当下的更新记录和关注内容，用于激励自己多用文字输出，用输出倒逼自己努力学习加油产出",-1),p=l("h2",{id:"备案",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#备案","aria-hidden":"true"},"#"),e(" 备案")],-1),b={href:"https://beian.miit.gov.cn/",target:"_blank",rel:"noopener noreferrer"},T=l("img",{src:"https://blog.shiqi-lu.tech/images/beian.png",alt:""},null,-1),L={href:"http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=44170202000299",target:"_blank",rel:"noopener noreferrer"},S=l("p",null,"© 2020 – 至今 shiqi-lu 版权所有",-1);function v(I,x){const a=n("ExternalLinkIcon"),r=n("RouterLink");return u(),d("div",null,[m,l("ul",null,[l("li",null,[l("p",null,[e("GitHub: "),l("a",c,[e("GitHub"),t(a)])])]),g]),_,f,l("ul",null,[l("li",null,[e("2024.1.7： "),l("ul",null,[l("li",null,[t(r,{to:"/algorithm/leetcode/1.Two-Sum.html"},{default:o(()=>[e("1.两数之和(Two Sum)E")]),_:1}),e(": 更新rust、ts、scala写法")])])]),l("li",null,[e("2023.8.15： "),l("ul",null,[l("li",null,[t(r,{to:"/cloud-compute/first-docker.html"},{default:o(()=>[e("第一本docker书")]),_:1})])])]),l("li",null,[e("2023.8.14： "),l("ul",null,[l("li",null,[t(r,{to:"/language/object-oriented-compare.html"},{default:o(()=>[e("封装、抽象、继承、多态的多语言实现")]),_:1})])])]),l("li",null,[e("2023.8.9: "),l("ul",null,[l("li",null,[t(r,{to:"/docs/language/language-compare.html"},{default:o(()=>[e("刷题多语言特性比较")]),_:1})]),l("li",null,[t(r,{to:"/other/review-technique.html"},{default:o(()=>[e("复习的技术")]),_:1})]),l("li",null,[t(r,{to:"/other/roam2md-intro.html"},{default:o(()=>[e("自研小工具roam2md介绍")]),_:1})])])]),l("li",null,[e("2023.8.8: "),l("ul",null,[l("li",null,[t(r,{to:"/algorithm/leetcode/200.Number-of-Islands.html"},{default:o(()=>[e("200. 岛屿数量(Number of Islands)M")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/54.Spiral-Matrix.html"},{default:o(()=>[e("54. 螺旋矩阵(Spiral Matrix)M")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/124.Binary-Tree-Maximum-Path-Sum.html"},{default:o(()=>[e("124. 二叉树中的最大路径和(Binary Tree Maximum Path Sum)H")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/56.Merge-Intervals.html"},{default:o(()=>[e("56. 合并区间(Merge Intervals)M")]),_:1})])])]),l("li",null,[e("2023.8.7: "),l("ul",null,[l("li",null,[t(r,{to:"/algorithm/leetcode/69.sqrt_x.html"},{default:o(()=>[e("69. x 的平方根(Sqrt(x))E")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/25.Reverse-Nodes-in-k-Group.html"},{default:o(()=>[e("25. K 个一组翻转链表(Reverse Nodes in k-Group)H")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/46.Permutations.html"},{default:o(()=>[e("46. 全排列(Permutations)M")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/47.Permutations-II.html"},{default:o(()=>[e("47. 全排列 II(Permutations II)M")]),_:1})])])]),l("li",null,[e("2023.8.4: "),l("ul",null,[l("li",null,[t(r,{to:"/algorithm/leetcode/88.Merge-Sorted-Array.html"},{default:o(()=>[e("88. 合并两个有序数组(Merge Sorted Array)E")]),_:1})])])]),l("li",null,[e("2023.8.3: "),l("ul",null,[l("li",null,[t(r,{to:"/algorithm/selection/leetcode-category.html"},{default:o(()=>[e("LeetCode题目分类")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/selection/binary-Tree-Traversal.html"},{default:o(()=>[e("二叉树的 4 种遍历(前中后序和层次遍历)整理")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/21.Merge-Two-Sorted-Lists.html"},{default:o(()=>[e("21. 合并两个有序链表(Merge Two Sorted Lists)E")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/141.Linked-List-Cycle.html"},{default:o(()=>[e("141. 环形链表(Linked List Cycle)E")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/415.Add-Strings.html"},{default:o(()=>[e("415. 字符串相加(Add Strings)E")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/232.Implement-Queue-using-Stacks.html"},{default:o(()=>[e("232. 用栈实现队列(Implement Queue using Stacks)E")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/160.Intersection-of-Two-Linked-Lists.html"},{default:o(()=>[e("160. 相交链表(Intersection of Two Linked Lists)E")]),_:1})])])]),l("li",null,[e("2023.8.2: "),l("ul",null,[l("li",null,[t(r,{to:"/algorithm/leetcode/5.Longest-Palindromic-Substring.html"},{default:o(()=>[e("5. 最长回文子串(Longest Palindromic Substring)M")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/300.Longest-Increasing-Subsequence.html"},{default:o(()=>[e("300. 最长上升子序列(Longest Increasing Subsequence)M")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/1143.Longest-Common-Subsequence.html"},{default:o(()=>[e("1143. 最长公共子序列(Longest Common Subsequence)M")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/70.Climbing-Stairs.html"},{default:o(()=>[e("70. 爬楼梯(Climbing Stairs)E")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/509.Fibonacci-Number.html"},{default:o(()=>[e("509. 斐波那契数(Fibonacci Number)E")]),_:1})])])]),l("li",null,[e("2023.7.24: "),l("ul",null,[l("li",null,[t(r,{to:"/algorithm/leetcode/236.Lowest-Common-Ancestor-of-a-Binary-Tree.html"},{default:o(()=>[e("236. 二叉树的最近公共祖先(Lowest Common Ancestor of a Binary Tree)M")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/103.Binary-Tree-Zigzag-Level-Order-Traversal.html"},{default:o(()=>[e("103. 二叉树的锯齿形层次遍历(Binary Tree Zigzag Level Order Traversal)M")]),_:1})])])]),l("li",null,[e("2023.7.23: "),l("ul",null,[l("li",null,[t(r,{to:"/algorithm/leetcode/102.Binary-Tree-Level-Order-Traversal.html"},{default:o(()=>[e("102. 二叉树的层序遍历(Binary Tree Level Order Traversal)M")]),_:1})]),l("li",null,[t(r,{to:"/'/distribute-arch/design-pattern/singleton.html"},{default:o(()=>[e("单例模式")]),_:1})])])]),l("li",null,[e("2023.7.22: "),l("ul",null,[l("li",null,[t(r,{to:"/algorithm/leetcode/144.Binary-Tree-Preorder-Traversal.html"},{default:o(()=>[e("144. 二叉树的前序遍历(Binary Tree Preorder Traversal)E")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/94.Binary-Tree-Inorder-Traversal.html"},{default:o(()=>[e("94. 二叉树的中序遍历(Binary Tree Inorder Traversal)E")]),_:1})]),l("li",null,[t(r,{to:"/algorithm/leetcode/145.Binary-Tree-Postorder-Traversal.html"},{default:o(()=>[e("145. 二叉树的后序遍历(Binary Tree Postorder Traversal)E")]),_:1})])])]),l("li",null,[e("2023.7.21: "),l("ul",null,[l("li",null,[t(r,{to:"/algorithm/leetcode/20.Valid-Parentheses.html"},{default:o(()=>[e("20. 有效的括号(Valid Parentheses)E")]),_:1})])])]),l("li",null,[e("2023.7.19： "),l("ul",null,[l("li",null,[t(r,{to:"/algorithm/leetcode/53.Maximum-Subarray.html"},{default:o(()=>[e("53. 最大子数组和(Maximum Subarray)E")]),_:1})])])])]),p,l("p",null,[l("a",b,[e("京ICP备2021009993号-1"),t(a)]),e(),T,e(),l("a",L,[e("粤公网安备 44170202000299号"),t(a)])]),S])}const M=i(h,[["render",v],["__file","index.html.vue"]]);export{M as default};
