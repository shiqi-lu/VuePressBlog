import{_ as e,r as l,o as t,c as i,a as n,b as s,d as o,e as p}from"./app-n0xwCUxG.js";const c={},u={href:"https://www.bilibili.com/video/BV1w4411y7Go?p=1",target:"_blank",rel:"noopener noreferrer"},d=p(`<ul><li>Q:Pod有哪些分类？ <ul><li>自主式Pod：Pod退出了，此类型的Pod不会被创建</li><li>控制器管理的Pod：在控制器的生命周期里，始终要维持Pod的副本数目</li></ul></li><li>Q:什么是控制器？ <ul><li>k8s中内建了很多controller(控制器)，这些相当于一个状态机，用来控制Pod的具体状态和行为</li></ul></li><li>Q:控制器有哪些类型？ <ul><li>ReplicationController和ReplicaSet</li><li>Deployment</li><li>DaemonSet</li><li>StateFulSet</li><li>Job/CronJob</li><li>Horizontal Pod Autoscaling</li></ul></li><li>Q:命令式编程和声明式编程的区别是什么？ <ul><li>命令式编程：侧重于如何实现，需要把程序的实现过程按照逻辑结果一步步写下来，k8s使用create命令</li><li>声明式编程：侧重于定义想要什么，然后告诉计算机/引擎，让它帮忙实现，k8s使用apply命令</li></ul></li><li>Q:ReplicationController和ReplicaSet是什么？ <ul><li>ReplicationController(RC)用来确保容器应用的副本数始终保持在用户定义的副本数，即如果有容器异常退出，会自动创建新的Pod来替代，而如果异常多出来的容器也会自动回收</li><li>在新版本的k8s中建议使用ReplicaSet来取代ReplicationController。ReplicaSet跟ReplicationController没有本质的不同，只是名字不一样，并且ReplicaSet支持集合式的selector</li><li>创建命令<code>kubectl create -f rs.yaml</code></li></ul></li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> extensions/v1beta1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> ReplicaSet
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> frontend
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">3</span>
<span class="token key atrule">selector</span><span class="token punctuation">:</span>
  <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>
    <span class="token key atrule">tier</span><span class="token punctuation">:</span> frontend
<span class="token key atrule">template</span><span class="token punctuation">:</span>
  <span class="token key atrule">metadata</span><span class="token punctuation">:</span>
    <span class="token key atrule">labels</span><span class="token punctuation">:</span>
      <span class="token key atrule">tier</span><span class="token punctuation">:</span> frontend
  <span class="token key atrule">spec</span><span class="token punctuation">:</span>
    <span class="token key atrule">containers</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> php<span class="token punctuation">-</span>redis
        <span class="token key atrule">image</span><span class="token punctuation">:</span> gcr.io/google_samples/gb<span class="token punctuation">-</span>frontend<span class="token punctuation">:</span>v3
        <span class="token key atrule">env</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> GET_HOSTS_FROM
          <span class="token key atrule">value</span><span class="token punctuation">:</span> dns
        <span class="token key atrule">ports</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Q:Deployment是什么？ <ul><li>为Pod和ReplicaSet提供了一个声明式定义(declarative)方法，用来替代以前的ReplicationController来方便的管理应用</li><li>典型场景有： <ul><li>定义Deployment来创建Pod和ReplicaSet</li><li>滚动升级和回滚应用</li><li>扩容和缩容</li><li>暂停和继续Deployment</li></ul></li><li><img src="https://img.shiqi-lu.tech/20200921170358.png" alt=""></li></ul></li><li><h2 id="q-如何使用deployment部署一个简单的nginx应用" tabindex="-1"><a class="header-anchor" href="#q-如何使用deployment部署一个简单的nginx应用" aria-hidden="true">#</a> Q:如何使用Deployment部署一个简单的Nginx应用</h2></li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> extensions/v1beta1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx<span class="token punctuation">-</span>deployment
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">3</span>
  <span class="token key atrule">template</span><span class="token punctuation">:</span>
    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>
      <span class="token key atrule">labels</span><span class="token punctuation">:</span>
        <span class="token key atrule">app</span><span class="token punctuation">:</span> nginx
    <span class="token key atrule">spec</span><span class="token punctuation">:</span>
      <span class="token key atrule">containers</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx
        <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx<span class="token punctuation">:</span>1.7.9
        <span class="token key atrule">ports</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>- 创建命令：\`kubectl create -f https://kubernetes.io/docs/user-guide/nginx-deployment.yaml --record\`
- 其中--record参数可以记录命令，可以很方便的查看每次revision的变化
</code></pre><ul><li>Q:如何查看deployment状态？ <ul><li><code>kubectl get deployment</code></li></ul></li><li>Q:如何对Deployment进行扩容？ <ul><li><code>kubectl scale deployment nginx-deployment --replicas 10</code></li></ul></li><li>Q:如何更新deployment镜像？ <ul><li><code>kubectl set image deployment/nginx-deployment nginx=nginx:1.9.1</code></li><li>=前是容器名，后是镜像</li></ul></li><li>Q:如何回滚deployment <ul><li><code>kubectl rollout undo deployment/nginx-deployment</code></li></ul></li><li>Q:如何查看可回滚的deployment历史版本？ <ul><li><code>kubectl rollout history deployment/nginx-deployment</code></li></ul></li><li>Q:如何回滚deployment到指定的历史版本？ <ul><li><code>kubectl rollout undo deployment/nginx-deployment --to-version=2</code></li></ul></li><li>Q:如何查看rollout状态？ <ul><li><code>kubectl rollout status deployment/nginx-deployment</code></li></ul></li><li>Q:如何编辑Deployment？ <ul><li><code>kubectl edit deployment/nginx-deployment</code></li></ul></li><li>Q:Deployment的清理策略是什么？ <ul><li>可以通过设置<code>.spec.revisonHistoryLimit</code>项来指定deployment最多保留多少revision历史记录。默认的会保留所有的revision；如果将该项设置为0，Deployment就不允许回退了</li></ul></li><li>Q:Deployment的更新策略是什么？ <ul><li>保证在升级时只有一定数量的Pod是down的。默认的，它会确保至少有比期望的Pod数量少一个是up状态（最多一个不可用）</li><li>Deployment 同时也可以确保只创建出超过期望数量的一定数量的Pod。默认的，它会确保最多比期望的Pod数 量多一个的Pod是up的（最多1个surge）</li><li>未来的 Kuberentes 版本中，将从1-1变成25%-25%</li></ul></li><li>Q:DaemonSet是什么？ <ul><li>确保全部(或者一些)Node上运行一个Pod的副本。当有Node加入集群时，也会为它们新增一个Pod。当有Node从集群移除时，这些Pod也会被回收。删除DaemonSet将会删除它创建的所有Pod</li><li>使用DaemonSet的一些典型用法： <ul><li>运行集群存储daemon，例如在每个Node上运行glusterd、ceph</li><li>在每个Node上运行日志手机daemon，例如fluentd、logstash</li><li>在每个Node上运行监控daemon，例如Prometheus Node Exporter、collectd、Datadog代理、New Relic代理，或Ganglia gmond</li></ul></li></ul></li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> DaemonSet
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> deamonset<span class="token punctuation">-</span>example
  <span class="token key atrule">labels</span><span class="token punctuation">:</span>
    <span class="token key atrule">app</span><span class="token punctuation">:</span> daemonset
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>
      <span class="token comment"># 注意这个name和上面的metadata中的name必须要一致</span>
      <span class="token key atrule">name</span><span class="token punctuation">:</span> deamonset<span class="token punctuation">-</span>example
  <span class="token key atrule">template</span><span class="token punctuation">:</span>
    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>
      <span class="token key atrule">labels</span><span class="token punctuation">:</span>
        <span class="token key atrule">name</span><span class="token punctuation">:</span> deamonset<span class="token punctuation">-</span>example
    <span class="token key atrule">spec</span><span class="token punctuation">:</span>
      <span class="token key atrule">containers</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> daemonset<span class="token punctuation">-</span>example
        <span class="token key atrule">image</span><span class="token punctuation">:</span> wangyanglinux/myapp<span class="token punctuation">:</span>v1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Q:Job的作用是什么？ <ul><li>负责批处理任务，即仅执行一次的任务，它保证批处理任务的一个或多个Pod成功结束</li><li>特殊说明 <ul><li>spec.template格式同Pod</li><li>RestartPolicy仅支持Never或OnFailure</li><li>单个Pod时，默认Pod成功运行后Job即结束</li><li><code>.spec.completions</code>标志Job结束需要成功运行的Pod个数，默认为1</li><li><code>.spec.parallelism</code>标志并行运行的Pod的个数，默认为1</li><li><code>spec.activeDeadlineSeconds</code>标志失败Pod的重试最大时间，超过这个时间不会继续重试</li></ul></li></ul></li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> batch/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Job
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> pi
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">template</span><span class="token punctuation">:</span>
    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>
      <span class="token key atrule">name</span><span class="token punctuation">:</span> pi
    <span class="token key atrule">spec</span><span class="token punctuation">:</span>
      <span class="token key atrule">containers</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> pi
        <span class="token key atrule">image</span><span class="token punctuation">:</span> perl
        <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;perl&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-Mbignum=bpi&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-wle&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;print bpi(2000)&quot;</span><span class="token punctuation">]</span> 
      <span class="token key atrule">restartPolicy</span><span class="token punctuation">:</span> Never
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>- 创建：\`kubectl create -f job.yaml\`
</code></pre><ul><li>Q:CronJob的作用是什么？ <ul><li>管理基于时间的Job，即： <ul><li>在给定时间点只运行一次</li><li>周期性地在给定时间点运行</li></ul></li><li>典型用法是： <ul><li>在给定的时间点调度Job运行</li><li>创建周期性运行的Job，如数据库备份、发送邮件</li></ul></li></ul></li><li>Q:如何查看cronjob状态？ <ul><li><code>kubectl get cronjob</code></li></ul></li><li>Q:StatefulSet是什么？ <ul><li>作为Controller为Pod提供唯一的标识。可以保证部署和scale的顺序</li><li>是为了解决有状态服务的问题(对应Delpoyments和ReplicaSets是为无状态服务而设计)，其应用场景包括： <ul><li>稳定的持久化存储，即Pod重新调度后还是能访问到相同的持久化数据，基于PVC来实现</li><li>稳定的网络标志，即Pod重新调度后其PodName和HostName不变，基于Headless Service(即没有Cluster IP的Service)来实现</li><li>有序部署，有序扩展，即Pod是有顺序的，在部署或者扩展的时候要依据定义的顺序依次进行，基于init containers来实现</li><li>有序收缩，有序删除</li></ul></li></ul></li><li>Q:Horizontal Pod Autoscaling是什么？ <ul><li>应用的资源使用率通常都有高峰和低谷的时候，如何削峰填谷，提高集群的整体资源利用率，让service中的pod个数自动调整呢？就是Horizontal Pod Autoscaling，即使Pod水平自动缩放</li></ul></li><li>Q:如何查看命令详细信息如rs？ <ul><li><code>kubectl explain rs</code></li></ul></li><li>Q:如何删除所有pod？ <ul><li><code>kubectl delete pod --all</code></li></ul></li><li>Q:查看pod状态的时候如何查看标签？ <ul><li><code>kubectl get pod --show-labels</code></li></ul></li><li>Q:如何给pod添加标签？ <ul><li><code>kubectl label pod frontend-m8szd tier=frontend1</code></li><li>即给frontend-m8szd这个容器加了一个标签，若已存在，需要使用--overwrite=True来覆盖</li></ul></li><li>Q:如何删除所有rs？ <ul><li><code>kubectl delete rs --all</code></li></ul></li><li>Q:如何查看pod的详细信息？ <ul><li><code>kubectl get pod -o wide</code></li></ul></li></ul>`,11);function r(k,m){const a=l("ExternalLinkIcon");return t(),i("div",null,[n("p",null,[s("来源："),n("a",u,[s("b站"),o(a)])]),d])}const b=e(c,[["render",r],["__file","k8s-5.html.vue"]]);export{b as default};
