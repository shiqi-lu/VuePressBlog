import{_ as l,r,o as d,c as t,a as e,b as i,d as o,e as h}from"./app-n0xwCUxG.js";const n={},s=e("h1",{id:"roam2md",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#roam2md","aria-hidden":"true"},"#"),i(" roam2md")],-1),c=e("p",null,"roam2md主要是把Roam Research的笔记转换为显示无误的markdown笔记",-1),m=e("h1",{id:"github",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#github","aria-hidden":"true"},"#"),i(" Github")],-1),u={href:"https://github.com/shiqi-lu/roam2md",target:"_blank",rel:"noopener noreferrer"},p=h('<h1 id="用法" tabindex="-1"><a class="header-anchor" href="#用法" aria-hidden="true">#</a> 用法</h1><ol><li>新建一个txt文件如example.txt，把要转换的roam内容粘贴到文本中</li><li>运行python脚本<code>python roam2md.py 0 example.txt ...</code>，即可把程序转换为对应的markdown文件<br> 其中，第一个参数指明了要转换为对应标题样式的级别，支持0~6，0为不转换，<br> 第二个参数及后续为要转换的文件或文件夹</li></ol><p><img src="https://img.shiqi-lu.tech/202308100952158.jpeg" alt=""></p><h1 id="功能列表" tabindex="-1"><a class="header-anchor" href="#功能列表" aria-hidden="true">#</a> 功能列表</h1><ul><li>[x] 代码块的处理</li><li>[x] 支持把前几级压扁成对应的h1、h2等的样式，最多支持6级</li><li>[x] 识别行间和行内公式</li><li>[x] 删除双向引用</li><li>[x] 提取alias中名字</li><li>[x] 支持高亮格式从^^转换为==</li><li>[x] 支持斜体从__转换为*</li><li>[x] 支持把行间公式压缩成一行</li></ul><p>不用转换的功能：</p><ul><li>删字符</li><li>加粗</li><li>图片</li><li>行内代码</li><li>超链接</li></ul><h1 id="测试支持app或网站" tabindex="-1"><a class="header-anchor" href="#测试支持app或网站" aria-hidden="true">#</a> 测试支持app或网站</h1><ul><li>mweb: roam2md</li><li>csdn: roam2md</li><li>leetcode: roam2leetcode</li><li>vuepress: roam2vuepress</li><li>github: roam2github</li></ul><h1 id="依赖" tabindex="-1"><a class="header-anchor" href="#依赖" aria-hidden="true">#</a> 依赖</h1><p>python &gt;= 3.7</p><h1 id="限制" tabindex="-1"><a class="header-anchor" href="#限制" aria-hidden="true">#</a> 限制</h1><ul><li>只支持无序列表(Bulleted List)，不支持有序列表(Numbered List)和文档(Document)，原因是有序列表难以判断和解析，支持文档模式会和现有的块内多行的判断有歧义</li></ul><h1 id="其它说明" tabindex="-1"><a class="header-anchor" href="#其它说明" aria-hidden="true">#</a> 其它说明</h1><ul><li>roam2md只支持语法正确时的解析，即保证在roam中能正确解析的，导出后也正确解析，不正确的语法，或故意为难解析器的，，我也没办法哇</li><li>roam2md目前是作者写给自用，用于方便把学习笔记生成markdown格式发布到csdn博客上，若使用过程中发现有解析出来的bug，请提一个issue，（视情况支持，主要不同markdown解析器的小区别太多了）</li></ul><h1 id="不同版本的区别-区分不同版本发现不同md的解析还有各种小差异和拓展-就区分开来" tabindex="-1"><a class="header-anchor" href="#不同版本的区别-区分不同版本发现不同md的解析还有各种小差异和拓展-就区分开来" aria-hidden="true">#</a> 不同版本的区别：区分不同版本发现不同md的解析还有各种小差异和拓展，就区分开来</h1><ul><li>vuepress <ul><li>用于支持在vuepress上写博客的md格式</li><li>不使用第一级#，而从第二级##开始，且增加一个开关支持多种代码的合并</li><li>高亮需要使用<code>&lt;mark&gt;&lt;/mark&gt;</code>来显示</li><li>代码高亮c++要转成cpp</li></ul></li><li>leetcode <ul><li>用于支持在leetcode上发题解的md格式</li><li>代码块上会加[]，用以多代码合并</li></ul></li><li>github <ul><li>用于支持leetcode上的md格式</li></ul></li></ul><h1 id="已知问题" tabindex="-1"><a class="header-anchor" href="#已知问题" aria-hidden="true">#</a> 已知问题</h1><p>github的行内公式支持的有些奇怪，语法确实是用<code>$</code>包含起来，但是不知道为啥有的会被转换，有的不行</p>',19);function x(_,b){const a=r("ExternalLinkIcon");return d(),t("div",null,[s,c,m,e("p",null,[e("a",u,[i("Github"),o(a)])]),p])}const g=l(n,[["render",x],["__file","roam2md-intro.html.vue"]]);export{g as default};
